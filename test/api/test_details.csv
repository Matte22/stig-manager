"name","method","url"
"LoadTestData - load standard test data - Import a new STIG - Win 10  (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"LoadTestData - load standard test data - Import a new STIG - RHEL 7 (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"LoadTestData - load standard test data - Import a new STIG - VPN  (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"LoadTestData - load standard test data - Import and overwrite application data (as elevated Admin)","POST","{{baseUrl}}/op/appdata?elevate=true"
"LoadTestData - load standard test data - Deletes the specified revision of a STIG v1r0 - with force - could fail if not present, so no tests","DELETE","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr?elevate=true&force=true"
"LoadTestData - create and delete a new collection, and an asset in the testCollection - Create a Collection in order to delete it","POST","{{baseUrl}}/collections?elevate=true&projection=grants&projection=labels"
"LoadTestData - create and delete a new collection, and an asset in the testCollection - Delete a Collection","DELETE","{{baseUrl}}/collections/:collectionId?elevate=true&projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs"
"LoadTestData - create and delete a new collection, and an asset in the testCollection - Create an Asset to be deleted in test collection","POST","{{baseUrl}}/assets?projection=stigs"
"LoadTestData - create and delete a new collection, and an asset in the testCollection - set stig-asset grants for a lvl1 user in this collection.","PUT","{{baseUrl}}/collections/:collectionId/grants/:userId/access"
"LoadTestData - create and delete a new collection, and an asset in the testCollection - Import one or more Reviews from a JSON body","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"LoadTestData - create and delete a new collection, and an asset in the testCollection - Delete an Asset in test collection","DELETE","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"GETs - load standard test data Copy - Import and overwrite application data (as elevated Admin)","POST","{{baseUrl}}/op/appdata?elevate=true"
"GETs - load standard test data Copy - Deletes the specified revision of a STIG v1r0 - with force - could fail if not present, so no tests","DELETE","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr?elevate=true&force=true"
"GETs - Collection GET - {collection Id} - stigs - {benchmark Id}/assets - Assets in a Collection attached to a STIG","GET","{{baseUrl}}/collections/:collectionId/stigs/:benchmarkId/assets?projection=restrictedUserAccess"
"GETs - Collection GET - {collection Id} - stigs - {benchmark Id}/assets - Assets in a Collection attached to a STIG - label","GET","{{baseUrl}}/collections/:collectionId/stigs/:benchmarkId/assets?projection=restrictedUserAccess&labelId={{testLabel}}"
"GETs - Collection GET - {collection Id} - stigs - {benchmark Id}/assets - Assets in a Collection attached to a STIG - label-lvl1","GET","{{baseUrl}}/collections/:collectionId/stigs/:benchmarkId/assets?projection=restrictedUserAccess&labelId={{testLabel-lvl1}}"
"GETs - Collection GET - {collection Id} - stigs - {benchmarkId} - Return Pinned Revision for this STIG","GET","{{baseUrl}}/collections/:collectionId/stigs/:benchmarkId"
"GETs - Collection GET - {collection Id} - stigs - {benchmarkId} - Return Pinned Revision for this STIG - lvl1 204","GET","{{baseUrl}}/collections/:collectionId/stigs/:benchmarkId"
"GETs - Collection GET - {collection Id} - stigs - {benchmarkId} - Return the info about the specified STIG from the specified Collection - asset projection","GET","{{baseUrl}}/collections/:collectionId/stigs/:benchmarkId?projection=assets"
"GETs - Collection GET - {collection Id} - stigs - Return the STIGs mapped in the specified Collection","GET","{{baseUrl}}/collections/:collectionId/stigs"
"GETs - Collection GET - {collection Id} - stigs - Return the STIGs mapped in the specified Collection - label","GET","{{baseUrl}}/collections/:collectionId/stigs?labelId={{testLabel}}"
"GETs - Collection GET - {collection Id} - stigs - Return the STIGs mapped in the specified Collection - label-lvl1","GET","{{baseUrl}}/collections/:collectionId/stigs?labelId={{testLabel-lvl1}}"
"GETs - Collection GET - {collection Id} - stigs - Return the STIGs mapped in the specified Collection - asset projection","GET","{{baseUrl}}/collections/:collectionId/stigs?projection=assets"
"GETs - Collection GET - {collection Id} - grants/{userId}/access - Return stig-asset grants for a lvl1 user in this collection.","GET","{{baseUrl}}/collections/:collectionId/grants/:userId/access"
"GETs - Collection GET - {collection Id} - Findings - Return the Findings for the specified Collection by ruleId","GET","{{baseUrl}}/collections/:collectionId/findings?aggregator=ruleId&acceptedOnly=false&projection=assets&projection=groups&projection=rules&projection=stigs&projection=ccis"
"GETs - Collection GET - {collection Id} - Findings - Return the Findings for the specified Collection by groupId","GET","{{baseUrl}}/collections/:collectionId/findings?aggregator=groupId&acceptedOnly=false&projection=assets&projection=groups&projection=rules&projection=stigs&projection=ccis"
"GETs - Collection GET - {collection Id} - Findings - Return the Findings for the specified Collection by cci","GET","{{baseUrl}}/collections/:collectionId/findings?aggregator=cci&acceptedOnly=false&projection=assets&projection=groups&projection=rules&projection=stigs&projection=ccis"
"GETs - Collection GET - {collection Id} - Findings - Return the Findings for the specified Collection for benchmarkId x ruleId","GET","{{baseUrl}}/collections/:collectionId/findings?aggregator=ruleId&acceptedOnly=false&benchmarkId={{testBenchmark}}&projection=assets&projection=groups&projection=rules&projection=stigs&projection=ccis"
"GETs - Collection GET - {collection Id} - Findings - Return the Findings for the specified Collection for asset x ruleId Copy","GET","{{baseUrl}}/collections/:collectionId/findings?aggregator=ruleId&acceptedOnly=false&assetId={{testAsset}}&projection=assets&projection=groups&projection=rules&projection=stigs&projection=ccis"
"GETs - Collection GET - {collection Id} - CKL - Return the Checklist for the supplied Collection and STIG-latest","GET","{{baseUrl}}/collections/:collectionId/checklists/:benchmarkId/:revisionStr"
"GETs - Collection GET - {collection Id} - CKL - Return the Checklist for the supplied Collection and STIG-revStr","GET","{{baseUrl}}/collections/:collectionId/checklists/:benchmarkId/:revisionStr"
"GETs - Collection GET - {collection Id} - poam - Return a POAM-like spreadsheet aggregated by groupId","GET","{{baseUrl}}/collections/:collectionId/poam?aggregator=groupId&date=01%2F01%2F1970&office=MyOffice&status=Ongoing&acceptedOnly=true"
"GETs - Collection GET - {collection Id} - poam - Return a POAM-like spreadsheet aggregated by ruleId","GET","{{baseUrl}}/collections/:collectionId/poam?aggregator=ruleId&date=01%2F01%2F1970&office=MyOffice&status=Ongoing"
"GETs - Collection GET - {collection Id} - metadata - Return the Metadata for a Collection","GET","{{baseUrl}}/collections/:collectionId/metadata?elevate={{elevated}}"
"GETs - Collection GET - {collection Id} - metadata - Return the Metadata KEYS for a Collection","GET","{{baseUrl}}/collections/:collectionId/metadata/keys?elevate={{elevated}}"
"GETs - Collection GET - {collection Id} - metadata - Return the Metadata VALUE for a Collection metadata KEY","GET","{{baseUrl}}/collections/:collectionId/metadata/keys/:key?elevate={{elevated}}"
"GETs - Collection GET - {collection Id} - labels - {labelId} - Collection label","GET","{{baseUrl}}/collections/:collectionId/labels/:labelId"
"GETs - Collection GET - {collection Id} - labels - {labelId} - Get Assets in Collection with a label","GET","{{baseUrl}}/collections/:collectionId/labels/:labelId/assets"
"GETs - Collection GET - {collection Id} - labels - Labels for the specified Collection","GET","{{baseUrl}}/collections/:collectionId/labels"
"GETs - Collection GET - {collection Id} - Review History - various params - History records - no query params","GET","{{baseUrl}}/collections/:collectionId/review-history"
"GETs - Collection GET - {collection Id} - Review History - various params - History records - all params","GET","{{baseUrl}}/collections/:collectionId/review-history?startDate={{testStartDate}}&endDate={{testEndDate}}&assetId={{testAsset}}&ruleId={{testRuleId}}&status={{testStatus}}"
"GETs - Collection GET - {collection Id} - Review History - various params - History records - startDate only","GET","{{baseUrl}}/collections/:collectionId/review-history?startDate={{testStartDate}}"
"GETs - Collection GET - {collection Id} - Review History - various params - History records - endDate only","GET","{{baseUrl}}/collections/:collectionId/review-history?endDate={{testEndDate}}"
"GETs - Collection GET - {collection Id} - Review History - various params - History records - start and end dates","GET","{{baseUrl}}/collections/:collectionId/review-history?startDate={{testStartDate}}&endDate={{testEndDate}}"
"GETs - Collection GET - {collection Id} - Review History - various params - History records - asset only","GET","{{baseUrl}}/collections/:collectionId/review-history?assetId={{testAsset}}"
"GETs - Collection GET - {collection Id} - Review History - various params - History records - rule only","GET","{{baseUrl}}/collections/:collectionId/review-history?ruleId={{testRuleId}}"
"GETs - Collection GET - {collection Id} - Review History - various params - History records - status only","GET","{{baseUrl}}/collections/:collectionId/review-history?status={{testStatus}}"
"GETs - Collection GET - {collection Id} - Review History Stats - various params - History stats - no query params","GET","{{baseUrl}}/collections/:collectionId/review-history/stats"
"GETs - Collection GET - {collection Id} - Review History Stats - various params - History stats - all params","GET","{{baseUrl}}/collections/:collectionId/review-history/stats?startDate={{testStartDate}}&endDate={{testEndDate}}&assetId={{testAsset}}&ruleId={{testRuleId}}&status={{testStatus}}&projection=asset"
"GETs - Collection GET - {collection Id} - Review History Stats - various params - History stats - startDate only","GET","{{baseUrl}}/collections/:collectionId/review-history/stats?startDate={{testStartDate}}"
"GETs - Collection GET - {collection Id} - Review History Stats - various params - History stats - startDate - Asset Projection","GET","{{baseUrl}}/collections/:collectionId/review-history/stats?startDate={{testStartDate}}&projection=asset"
"GETs - Collection GET - {collection Id} - Review History Stats - various params - History stats - endDate only","GET","{{baseUrl}}/collections/:collectionId/review-history/stats?endDate={{testEndDate}}"
"GETs - Collection GET - {collection Id} - Review History Stats - various params - History stats - start and end dates","GET","{{baseUrl}}/collections/:collectionId/review-history/stats?startDate={{testStartDate}}&endDate={{testEndDate}}"
"GETs - Collection GET - {collection Id} - Review History Stats - various params - History stats - asset only","GET","{{baseUrl}}/collections/:collectionId/review-history/stats?assetId={{testAsset}}"
"GETs - Collection GET - {collection Id} - Review History Stats - various params - History stats - rule only","GET","{{baseUrl}}/collections/:collectionId/review-history/stats?ruleId={{testRuleId}}"
"GETs - Collection GET - {collection Id} - Review History Stats - various params - History stats - status only","GET","{{baseUrl}}/collections/:collectionId/review-history/stats?status={{testStatus}}"
"GETs - Collection GET - {collection Id} - Return a Collection","GET","{{baseUrl}}/collections/:collectionId?elevate={{elevated}}&projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs&projection=labels"
"GETs - Collection GET - Collections various params - Return a list of Collections accessible to the requester TEST","GET","{{baseUrl}}/collections?projection=owners&projection=statistics"
"GETs - Collection GET - Collections various params - Return a list of Collections accessible to the requester No Filters","GET","{{baseUrl}}/collections?elevate={{elevated}}&projection=owners&projection=statistics"
"GETs - Collection GET - Collections various params - Return a list of Collections accessible to the requester NAME","GET","{{baseUrl}}/collections?name={{collectionMatchString}}&elevate={{elevated}}&projection=owners&projection=statistics&name-match={{collectionMatchType}}"
"GETs - Collection GET - Collections various params - Return a list of Collections accessible to the requester METADATA","GET","{{baseUrl}}/collections?metadata={{metadataKey}}%3A{{metadataValue}}&elevate={{elevated}}&projection=owners&projection=statistics"
"GETs - Asset GET - {asset Id} - metadata - Return the Metadata for an Asset","GET","{{baseUrl}}/assets/:assetId/metadata"
"GETs - Asset GET - {asset Id} - metadata - Return the Metadata KEYS for an Asset","GET","{{baseUrl}}/assets/:assetId/metadata/keys"
"GETs - Asset GET - {asset Id} - metadata - Return the Metadata VALUE for an Asset metadata KEY","GET","{{baseUrl}}/assets/:assetId/metadata/keys/:key"
"GETs - Asset GET - {asset Id} - stigs - Return an Asset's STIG assignments","GET","{{baseUrl}}/assets/:assetId/stigs"
"GETs - Asset GET - {asset Id} - Return an Asset (with StigGrants projection)","GET","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"GETs - Asset GET - {asset Id} - Return an Asset (with StigGrants projection) - Asset - no assigned STIGs","GET","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"GETs - Asset GET - {asset Id} - Return an Asset (without StigGrants projection)","GET","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs"
"GETs - Asset GET - {asset Id} - Return an Asset (without StigGrants projection) - Asset - no assigned STIGs","GET","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs"
"GETs - Asset GET - {asset Id} - Return the Checklist for the supplied Asset and STIG JSON","GET","{{baseUrl}}/assets/:assetId/checklists/:benchmarkId/:revisionStr?format=json"
"GETs - Asset GET - {asset Id} - Return the Checklist for the supplied Asset and STIG XML (.ckl)","GET","{{baseUrl}}/assets/:assetId/checklists/:benchmarkId/:revisionStr?format=ckl"
"GETs - Asset GET - {asset Id} - Return the Checklist for the supplied Asset and MULTI-STIG XML (.CKL) - specified stigs","GET","{{baseUrl}}/assets/:assetId/checklists/?benchmarkId={{testBenchmark}}&benchmarkId=Windows_10_STIG_TEST"
"GETs - Asset GET - {asset Id} - Return the Checklist for the supplied Asset and MULTI-STIG XML (.CKL) - no specified stigs","GET","{{baseUrl}}/assets/:assetId/checklists/"
"GETs - Asset GET - {asset Id} - Return the Checklist for the supplied Asset and STIG XML (.cklB) - specific STIG","GET","{{baseUrl}}/assets/:assetId/checklists/:benchmarkId/:revisionStr?format=cklb"
"GETs - Asset GET - {asset Id} - Return the Checklist for the supplied Asset and MULTI-STIG JSON (.cklB) - no specified STIG","GET","{{baseUrl}}/assets/:assetId/checklists?format=cklb"
"GETs - Asset GET - {asset Id} - Return the Checklist for the supplied Asset and MULTI-STIG JSON (.cklB) - specific STIGs","GET","{{baseUrl}}/assets/:assetId/checklists?format=cklb&benchmarkId={{testBenchmark}}&benchmarkId=Windows_10_STIG_TEST"
"GETs - Asset GET - {asset Id} - Return the Checklist for the supplied Asset with benchmark query param","GET","{{baseUrl}}/assets/:assetId/checklists?benchmarkId={{testBenchmark}}"
"GETs - Asset GET - Assets accessible to the requester (with STIG grants projection)","GET","{{baseUrl}}/assets?collectionId={{testCollection}}&benchmarkId={{testBenchmark}}&projection=statusStats&projection=stigs&projection=stigGrants"
"GETs - Asset GET - Assets accessible to the requester (with STIG grants projection - no benchmark specified)","GET","{{baseUrl}}/assets?collectionId={{testCollection}}&projection=statusStats&projection=stigs&projection=stigGrants"
"GETs - Asset GET - Assets accessible to the requester - No StigGrants (for lvl1 user success)","GET","{{baseUrl}}/assets?collectionId={{testCollection}}&benchmarkId={{testBenchmark}}&projection=statusStats&projection=stigs"
"GETs - Asset GET - Assets accessible to the requester - No filters or StigGrants (for lvl1 user success)","GET","{{baseUrl}}/assets?collectionId={{testCollection}}&projection=statusStats&projection=stigs"
"GETs - Asset GET - Assets accessible to the requester - labels","GET","{{baseUrl}}/assets?collectionId={{testCollection}}&labelId={{testLabel}}"
"GETs - Reviews GET - reviews - {asset Id} - {rule Id} - Return the Review for an Asset and Rule","GET","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=history&projection=stigs&projection=rule&projection=metadata"
"GETs - Reviews GET - reviews - {asset Id} - {rule Id} - Return the Review Metadata for an Asset and Rule","GET","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId/metadata"
"GETs - Reviews GET - reviews - {asset Id} - {rule Id} - Return the Review Metadata KEYS for an Asset and Rule","GET","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId/metadata/keys"
"GETs - Reviews GET - reviews - {asset Id} - {rule Id} - Return the Review Metadata VALUE for an Asset/Rule/metadata KEY","GET","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId/metadata/keys/:key"
"GETs - Reviews GET - reviews - {asset Id} - Reviews by Asset; Parameter variations - Return a list of Reviews for an Asset","GET","{{baseUrl}}/collections/:collectionId/reviews/:assetId?projection=rule&projection=stigs"
"GETs - Reviews GET - reviews - {asset Id} - Reviews by Asset; Parameter variations - Return a list of Reviews for an Asset RESULT Fail","GET","{{baseUrl}}/collections/:collectionId/reviews/:assetId?result=fail&projection=rule&projection=stigs"
"GETs - Reviews GET - reviews - {asset Id} - Reviews by Asset; Parameter variations - Return a list of Reviews for an Asset RESULT pass","GET","{{baseUrl}}/collections/:collectionId/reviews/:assetId?result=pass&projection=rule&projection=stigs"
"GETs - Reviews GET - reviews - {asset Id} - Reviews by Asset; Parameter variations - Return a list of Reviews for an Asset STATUS saved","GET","{{baseUrl}}/collections/:collectionId/reviews/:assetId?status=saved&projection=rule&projection=stigs"
"GETs - Reviews GET - reviews - {asset Id} - Reviews by Asset; Parameter variations - Return a list of Reviews for an Asset STATUS submitted","GET","{{baseUrl}}/collections/:collectionId/reviews/:assetId?status=submitted&projection=rule&projection=stigs"
"GETs - Reviews GET - reviews - {asset Id} - Reviews by Asset; Parameter variations - Return a list of Reviews for an Asset BENCHMARK","GET","{{baseUrl}}/collections/:collectionId/reviews/:assetId?benchmarkId={{testBenchmark}}&projection=rule&projection=stigs"
"GETs - Reviews GET - reviews - {asset Id} - Reviews by Asset; Parameter variations - Return a list of Reviews for an Asset BENCHMARK - metadata","GET","{{baseUrl}}/collections/:collectionId/reviews/:assetId?projection=rule&projection=stigs&projection=metadata&metadata={{testMetadataKey}}%3A{{testMetadataValue}}"
"GETs - Reviews GET - reviews - Reviews; Parameter Variations - Return a list of Reviews accessible to the requester","GET","{{baseUrl}}/collections/:collectionId/reviews?projection=rule&projection=stigs"
"GETs - Reviews GET - reviews - Reviews; Parameter Variations - Return a list of Reviews accessible to the requester RESULT fail","GET","{{baseUrl}}/collections/:collectionId/reviews?result=fail&projection=rule&projection=stigs"
"GETs - Reviews GET - reviews - Reviews; Parameter Variations - Return a list of Reviews accessible to the requester STATUS saved","GET","{{baseUrl}}/collections/:collectionId/reviews?status=saved&projection=rule&projection=stigs"
"GETs - Reviews GET - reviews - Reviews; Parameter Variations - Return a list of Reviews accessible to the requester RULEID","GET","{{baseUrl}}/collections/:collectionId/reviews?ruleId={{testRuleId}}&projection=rule&projection=stigs"
"GETs - Reviews GET - reviews - Reviews; Parameter Variations - Return a list of Reviews accessible to the requester USERID","GET","{{baseUrl}}/collections/:collectionId/reviews?userId={{testUserId}}&projection=rule&projection=stigs"
"GETs - Reviews GET - reviews - Reviews; Parameter Variations - Return a list of Reviews accessible to the requester ASSETID","GET","{{baseUrl}}/collections/:collectionId/reviews?assetId={{testAsset}}&projection=rule&projection=stigs"
"GETs - Reviews GET - reviews - Reviews; Parameter Variations - Return a list of Reviews accessible to the requester BENCHMARKID","GET","{{baseUrl}}/collections/:collectionId/reviews?benchmarkId={{testBenchmark}}&projection=rule&projection=stigs"
"GETs - Reviews GET - reviews - Reviews; Parameter Variations - Return a list of Reviews accessible to the requester - metadata","GET","{{baseUrl}}/collections/:collectionId/reviews?projection=rule&projection=stigs&metadata={{testMetadataKey}}%3A{{testMetadataValue}}&projection=metadata"
"GETs - users GET - {user Id} - Return a User","GET","{{baseUrl}}/users/:userId?elevate={{elevated}}&projection=collectionGrants&projection=statistics"
"GETs - users GET - Return a list of Users accessible to the requester","GET","{{baseUrl}}/users?elevate={{elevated}}&projection=collectionGrants&projection=statistics"
"GETs - users GET - Return a list of Users accessible to the requester - NO PROJECTIONS","GET","{{baseUrl}}/users"
"GETs - users GET - Return a list of Users accessible to the requester USERNAME","GET","{{baseUrl}}/users?elevate={{elevated}}&username={{testUser}}&projection=collectionGrants&projection=statistics"
"GETs - users GET - Return a list of Users accessible to the requester USERNAME - NO PROJECTIONS","GET","{{baseUrl}}/users?elevate={{elevated}}&username={{testUser}}"
"GETs - op GET - appdata - Export application data","GET","{{baseUrl}}/op/appdata?elevate={{elevated}}"
"GETs - metrics GET - {collectionId} - summary - asset agg - Return summary metrics - assset agg","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/asset"
"GETs - metrics GET - {collectionId} - summary - asset agg - Return summary metrics - asset agg - benchmark param","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/asset?benchmarkId={{testBenchmark}}"
"GETs - metrics GET - {collectionId} - summary - asset agg - Return summary metrics - asset agg - with param assetId","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/asset?assetId={{testAsset}}"
"GETs - metrics GET - {collectionId} - summary - asset agg - Return summary metrics - asset agg - with param labelId","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/asset?labelId={{testLabel}}"
"GETs - metrics GET - {collectionId} - summary - asset agg - Return summary metrics - asset agg - with params labelName","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/asset?labelName={{testLabelName-lvl1}}"
"GETs - metrics GET - {collectionId} - summary - stig agg - Return summary metrics - stig agg","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/stig"
"GETs - metrics GET - {collectionId} - summary - stig agg - Return summary metrics - stig agg - param benchmark","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/stig?benchmarkId={{testBenchmark}}"
"GETs - metrics GET - {collectionId} - summary - stig agg - Return summary metrics - stig agg - param asset","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/stig?assetId={{testAsset}}"
"GETs - metrics GET - {collectionId} - summary - stig agg - Return summary metrics - stig agg - param labelId","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/stig?labelId={{testLabel}}"
"GETs - metrics GET - {collectionId} - summary - stig agg - Return summary metrics - stig agg - param labelName","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/stig?labelName={{testLabelName}}"
"GETs - metrics GET - {collectionId} - summary - label agg - Return summary metrics - label agg","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/label"
"GETs - metrics GET - {collectionId} - summary - label agg - Return summary metrics - label agg - param benchmark","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/label?benchmarkId={{testBenchmark}}"
"GETs - metrics GET - {collectionId} - summary - label agg - Return summary metrics - label agg - param assetId","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/label?assetId={{testAsset}}"
"GETs - metrics GET - {collectionId} - summary - label agg - Return summary metrics - label agg - param labelId","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/label?labelId={{testLabel}}"
"GETs - metrics GET - {collectionId} - summary - label agg - Return summary metrics - label agg - param labelName","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/label?labelName={{testLabelName}}"
"GETs - metrics GET - {collectionId} - summary - Collection agg - Return summary metrics - collection agg - no params","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/collection"
"GETs - metrics GET - {collectionId} - summary - Collection agg - Return summary metrics - collection agg - benchmark param","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/collection?benchmarkId={{testBenchmark}}"
"GETs - metrics GET - {collectionId} - summary - Collection agg - Return summary metrics - collection agg - asset param","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/collection?assetId={{testAsset}}"
"GETs - metrics GET - {collectionId} - summary - Collection agg - Return summary metrics - collection agg - labelId param","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/collection?labelId={{testLabel}}"
"GETs - metrics GET - {collectionId} - summary - Collection agg - Return summary metrics - collection agg - label name param","GET","{{baseUrl}}/collections/:collectionId/metrics/summary/collection?labelName={{testLabelName}}"
"GETs - metrics GET - {collectionId} - summary - Return summary metrics for the Collection - no agg - no params","GET","{{baseUrl}}/collections/:collectionId/metrics/summary"
"GETs - metrics GET - {collectionId} - summary - Return summary metrics for the Collection - benchmark param - no agg","GET","{{baseUrl}}/collections/:collectionId/metrics/summary"
"GETs - metrics GET - {collectionId} - summary - Return summary metrics for the Collection - asset param - no agg","GET","{{baseUrl}}/collections/:collectionId/metrics/summary?assetId={{testAsset}}"
"GETs - metrics GET - {collectionId} - summary - Return summary metrics for the Collection - labelId param - no agg","GET","{{baseUrl}}/collections/:collectionId/metrics/summary?labelId={{testLabel}}"
"GETs - metrics GET - {collectionId} - summary - Return summary metrics for the Collection - laelName param - no agg","GET","{{baseUrl}}/collections/:collectionId/metrics/summary?labelName={{testLabelName}}"
"GETs - metrics GET - {collectionId} - detail - asset agg - detail - Return detail metrics - assset agg","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/asset"
"GETs - metrics GET - {collectionId} - detail - asset agg - detail - Return detail metrics - asset agg - with params","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/asset?benchmarkId={{testBenchmark}}"
"GETs - metrics GET - {collectionId} - detail - asset agg - detail - Return detail metrics - asset agg - with param assetId","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/asset?assetId={{testAsset}}"
"GETs - metrics GET - {collectionId} - detail - asset agg - detail - Return detail metrics - asset agg - with param labelId","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/asset?labelId={{testLabel}}"
"GETs - metrics GET - {collectionId} - detail - asset agg - detail - Return detail metrics - asset agg - with params labelName","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/asset?labelName={{testLabelName-lvl1}}"
"GETs - metrics GET - {collectionId} - detail - asset agg - detail - Return detail metrics - asset agg - with params - all","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/asset?benchmarkId={{testBenchmark}}&assetId={{testAsset}}&labelId={{testLabel}}&labelName={{testLabelName-lvl1}}"
"GETs - metrics GET - {collectionId} - detail - stig agg - detail - Return detail metrics - stig agg","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/stig"
"GETs - metrics GET - {collectionId} - detail - stig agg - detail - Return detail metrics - stig agg - param benchmark","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/stig?benchmarkId={{testBenchmark}}"
"GETs - metrics GET - {collectionId} - detail - stig agg - detail - Return detail metrics - stig agg - param asset","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/stig?assetId={{testAsset}}"
"GETs - metrics GET - {collectionId} - detail - stig agg - detail - Return detail metrics - stig agg - param labelId","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/stig?labelId={{testLabel}}"
"GETs - metrics GET - {collectionId} - detail - stig agg - detail - Return detail metrics - stig agg - param labelName","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/stig?labelName={{testLabelName}}"
"GETs - metrics GET - {collectionId} - detail - Collection agg - detail - Return detail metrics - collection agg - no params","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/collection"
"GETs - metrics GET - {collectionId} - detail - Collection agg - detail - Return detail metrics - collection agg - benchmark param","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/collection?benchmarkId={{testBenchmark}}"
"GETs - metrics GET - {collectionId} - detail - Collection agg - detail - Return detail metrics - collection agg - asset param","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/collection?assetId={{testAsset}}"
"GETs - metrics GET - {collectionId} - detail - Collection agg - detail - Return detail metrics - collection agg - labelId param","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/collection?labelId={{testLabel}}"
"GETs - metrics GET - {collectionId} - detail - Collection agg - detail - Return detail metrics - collection agg - label name param","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/collection?labelName={{testLabelName}}"
"GETs - metrics GET - {collectionId} - detail - label agg - detail - Return detail metrics - label agg","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/label"
"GETs - metrics GET - {collectionId} - detail - label agg - detail - Return detail metrics - asset agg - param benchmark","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/label?benchmarkId={{testBenchmark}}"
"GETs - metrics GET - {collectionId} - detail - label agg - detail - Return detail metrics - asset agg - param assetId","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/label?assetId={{testAsset}}"
"GETs - metrics GET - {collectionId} - detail - label agg - detail - Return detail metrics - asset agg - param labelId","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/label?labelId={{testLabel}}"
"GETs - metrics GET - {collectionId} - detail - label agg - detail - Return detail metrics - asset agg - param labelName","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/label?labelName={{testLabelName}}"
"GETs - metrics GET - {collectionId} - detail - resultEngine, user, statusUser metrics - detail metrics - no agg - resultEngine,user,statusUser checks","GET","{{baseUrl}}/collections/:collectionId/metrics/detail"
"GETs - metrics GET - {collectionId} - detail - resultEngine, user, statusUser metrics - detail metrics - asset agg - resultEngine,user,statusUser checks Copy","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/asset"
"GETs - metrics GET - {collectionId} - detail - resultEngine, user, statusUser metrics - detail metrics - stig agg - resultEngine,user,statusUser checks","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/stig"
"GETs - metrics GET - {collectionId} - detail - resultEngine, user, statusUser metrics - detail metrics - collection agg - resultEngine,user,statusUser checks","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/collection"
"GETs - metrics GET - {collectionId} - detail - resultEngine, user, statusUser metrics - detail metrics - label agg - resultEngine,user,statusUser checks","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/stig"
"GETs - metrics GET - {collectionId} - detail - Return detailed metrics for the specified Collection","GET","{{baseUrl}}/collections/:collectionId/metrics/detail"
"GETs - metrics GET - {collectionId} - detail - Return detailed metrics for the specified Collection - with params","GET","{{baseUrl}}/collections/:collectionId/metrics/detail?benchmarkId={{testBenchmark}}&assetId={{testAsset}}&labelName={{testLabelName-lvl1}}"
"GETs - meta metrics GET - load test data Copy - Import a new STIG - VPN R1V0","POST","{{baseUrl}}/stigs?clobber=true"
"GETs - meta metrics GET - load test data Copy - Import and overwrite application data - META METRICS","POST","{{baseUrl}}/op/appdata?elevate=true"
"GETs - meta metrics GET - summary - no-agg - meta metrics summary- no agg - no params","GET","{{baseUrl}}/collections/meta/metrics/summary"
"GETs - meta metrics GET - summary - no-agg - meta metrics summary - no agg - collectionId param","GET","{{baseUrl}}/collections/meta/metrics/summary?collectionId={{testCollection}}"
"GETs - meta metrics GET - summary - no-agg - meta metrics summary - no agg - benchmark param","GET","{{baseUrl}}/collections/meta/metrics/summary?benchmarkId={{testBenchmark}}"
"GETs - meta metrics GET - summary - collection agg - Return meta metrics summary - collection agg - no params Copy","GET","{{baseUrl}}/collections/meta/metrics/summary/collection"
"GETs - meta metrics GET - summary - collection agg - Return meta metrics summary - collection agg - collection param","GET","{{baseUrl}}/collections/meta/metrics/summary/collection?collectionId={{testCollection}}"
"GETs - meta metrics GET - summary - collection agg - Return meta metrics summary - collection agg - benchmark param","GET","{{baseUrl}}/collections/meta/metrics/summary/collection?benchmarkId={{testBenchmark}}"
"GETs - meta metrics GET - summary - collection agg - Return meta metrics summary - collection agg - rev param","GET","{{baseUrl}}/collections/meta/metrics/summary/collection?revisionId={{testBenchmark}}-1-0"
"GETs - meta metrics GET - summary - collection agg - Return meta metrics summary - collection agg - rev param Copy","GET","{{baseUrl}}/collections/meta/metrics/summary/collection?revisionId={{testBenchmark}}-1-1"
"GETs - meta metrics GET - summary - stig agg - Return meta metrics summary - stig agg - no params Copy","GET","{{baseUrl}}/collections/meta/metrics/summary/stig"
"GETs - meta metrics GET - summary - stig agg - Return meta metrics summary - stig agg - collection param","GET","{{baseUrl}}/collections/meta/metrics/summary/stig?collectionId={{testCollection}}"
"GETs - meta metrics GET - summary - stig agg - Return meta metrics summary - stig agg - benchmark param","GET","{{baseUrl}}/collections/meta/metrics/summary/stig?benchmarkId={{testBenchmark}}"
"GETs - meta metrics GET - summary - stig agg - Return meta metrics summary - stig agg - coll and bench params","GET","{{baseUrl}}/collections/meta/metrics/summary/stig?collectionId={{testCollection}}&benchmarkId={{testBenchmark}}"
"GETs - meta metrics GET - detail - no agg - meta metrics detail - no agg - no params","GET","{{baseUrl}}/collections/meta/metrics/detail"
"GETs - meta metrics GET - detail - no agg - meta metrics detail - no agg - coll param","GET","{{baseUrl}}/collections/meta/metrics/detail?collectionId={{testCollection}}"
"GETs - meta metrics GET - detail - no agg - meta metrics detail - no agg - bench param","GET","{{baseUrl}}/collections/meta/metrics/detail?benchmarkId={{testBenchmark}}"
"GETs - meta metrics GET - detail - collection agg - meta metrics detail - collection agg - no params","GET","{{baseUrl}}/collections/meta/metrics/detail/collection"
"GETs - meta metrics GET - detail - collection agg - meta metrics detail - collection agg - coll param","GET","{{baseUrl}}/collections/meta/metrics/detail/collection?collectionId={{testCollection}}"
"GETs - meta metrics GET - detail - collection agg - meta metrics detail - collection agg - bench param","GET","{{baseUrl}}/collections/meta/metrics/detail/collection?benchmarkId={{testBenchmark}}"
"GETs - meta metrics GET - detail - collection agg - meta metrics detail - collection agg - rev param","GET","{{baseUrl}}/collections/meta/metrics/detail/collection?revisionId={{testBenchmark}}-1-1"
"GETs - meta metrics GET - detail - stig agg - meta metrics detail - stig agg - no params","GET","{{baseUrl}}/collections/meta/metrics/detail/stig"
"GETs - meta metrics GET - detail - stig agg - meta metrics detail - stig agg - coll param","GET","{{baseUrl}}/collections/meta/metrics/detail/stig?collectionId={{testCollection}}"
"GETs - meta metrics GET - detail - stig agg - meta metrics detail - stig agg - bench param","GET","{{baseUrl}}/collections/meta/metrics/detail/stig?benchmarkId={{testBenchmark}}"
"GETs - Return API Deployment Details","GET","{{baseUrl}}/op/details?elevate={{elevated}}"
"GETs - Return API version and configuration information","GET","{{baseUrl}}/op/configuration"
"GETs - Return the requester's user information","GET","{{baseUrl}}/user"
"POSTS, Puts, Patches, and Deletes - Prep Data - Import a new STIG - VPN  (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"POSTS, Puts, Patches, and Deletes - Prep Data - Import a new STIG - Win 10  (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"POSTS, Puts, Patches, and Deletes - Prep Data - Import a new STIG - RHEL 7 (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"POSTS, Puts, Patches, and Deletes - Prep Data - Import and overwrite application data PREP FOR UPDATE TESTS","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - op PPPD - appdata - Import and overwrite application data","POST","{{baseUrl}}/op/appdata?elevate={{elevated}}"
"POSTS, Puts, Patches, and Deletes - op PPPD - appdata - Import and overwrite application data Elevate = false","POST","{{baseUrl}}/op/appdata?elevate=false"
"POSTS, Puts, Patches, and Deletes - op PPPD - appdata - Import and overwrite application data ZIP","POST","{{baseUrl}}/op/appdata?elevate={{elevated}}"
"POSTS, Puts, Patches, and Deletes - op PPPD - appdata - Import and overwrite application data JSON BODY","POST","{{baseUrl}}/op/appdata?elevate={{elevated}}"
"POSTS, Puts, Patches, and Deletes - LoadTestData - load standard test data - Import a new STIG - Win 10  (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"POSTS, Puts, Patches, and Deletes - LoadTestData - load standard test data - Import a new STIG - RHEL 7 (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"POSTS, Puts, Patches, and Deletes - LoadTestData - load standard test data - Import a new STIG - VPN  (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"POSTS, Puts, Patches, and Deletes - LoadTestData - load standard test data - Import and overwrite application data (as elevated Admin)","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - LoadTestData - load standard test data - Deletes the specified revision of a STIG v1r0 - with force - could fail if not present, so no tests","DELETE","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr?elevate=true&force=true"
"POSTS, Puts, Patches, and Deletes - LoadTestData - create and delete a new collection, and an asset in the testCollection - Create a Collection in order to delete it","POST","{{baseUrl}}/collections?elevate=true&projection=grants&projection=labels"
"POSTS, Puts, Patches, and Deletes - LoadTestData - create and delete a new collection, and an asset in the testCollection - Delete a Collection","DELETE","{{baseUrl}}/collections/:collectionId?elevate=true&projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs"
"POSTS, Puts, Patches, and Deletes - LoadTestData - create and delete a new collection, and an asset in the testCollection - Create an Asset to be deleted in test collection","POST","{{baseUrl}}/assets?projection=stigs"
"POSTS, Puts, Patches, and Deletes - LoadTestData - create and delete a new collection, and an asset in the testCollection - set stig-asset grants for a lvl1 user in this collection. Copy","PUT","{{baseUrl}}/collections/:collectionId/grants/:userId/access"
"POSTS, Puts, Patches, and Deletes - LoadTestData - create and delete a new collection, and an asset in the testCollection - Import one or more Reviews from a JSON body Copy","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"POSTS, Puts, Patches, and Deletes - LoadTestData - create and delete a new collection, and an asset in the testCollection - Delete an Asset in test collection","DELETE","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - stigs - {benchmark Id}/assets - Set the Assets mapped to a STIG","PUT","{{baseUrl}}/collections/:collectionId/stigs/:benchmarkId/assets?projection=restrictedUserAccess"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - grants/{userId}/access PPPD - set stig-asset grants for a lvl1 user in this collection.","PUT","{{baseUrl}}/collections/:collectionId/grants/:userId/access"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - metadata - Set all properties of a Collection- with metadata","PUT","{{baseUrl}}/collections/:collectionId?elevate={{elevated}}&projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - metadata - Set all metadata of a Collection","PUT","{{baseUrl}}/collections/:collectionId/metadata"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - metadata - Set one metadata key/value of a Collection","PUT","{{baseUrl}}/collections/:collectionId/metadata/keys/:key"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - metadata - Merge metadata property/value into a Collection","PATCH","{{baseUrl}}/collections/:collectionId/metadata"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - metadata - Delete one metadata key/value of a Collection","DELETE","{{baseUrl}}/collections/:collectionId/metadata/keys/:key"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - labels - {labelId} - Replace a Labels Asset Mappings in a Collection","PUT","{{baseUrl}}/collections/:collectionId/labels/:labelId/assets"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - labels - {labelId} - Update Label in a Collection","PATCH","{{baseUrl}}/collections/:collectionId/labels/:labelId"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - labels - {labelId} - Delete Label in a Collection","DELETE","{{baseUrl}}/collections/:collectionId/labels/:labelId"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - labels - Create Label in a Collection","POST","{{baseUrl}}/collections/:collectionId/labels"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - Review History - Delete and verify pruning - test history prune - Import and overwrite application data (as elevated Admin)","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - Review History - Delete and verify pruning - test history prune - Set collection history max reviews to 2","PATCH","{{baseUrl}}/collections/:collectionId?elevate={{elevated}}&projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - Review History - Delete and verify pruning - test history prune - Post review, triggering history prune.","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - Review History - Delete and verify pruning - test history prune - History stats - rule-asset - check history is pruned to 2","GET","{{baseUrl}}/collections/:collectionId/review-history/stats?assetId={{testAsset}}&ruleId={{testRuleId}}"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - Review History - Delete and verify pruning - Import and overwrite application data (as elevated Admin)","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - Review History - Delete and verify pruning - History records - date and asset","DELETE","{{baseUrl}}/collections/:collectionId/review-history?retentionDate={{testEndDate}}&assetId={{testAsset}}"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - Review History - Delete and verify pruning - History records - date","DELETE","{{baseUrl}}/collections/:collectionId/review-history?retentionDate={{testEndDate}}"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - Review History - Delete and verify pruning - Import and overwrite application data (as elevated Admin) Copy","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - export-to - export results to another collection - entire asset - create asset in destination","POST","{{baseUrl}}/collections/:collectionId/export-to/:dstCollectionId"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - export-to - export results to another collection - entire asset - asset exists","POST","{{baseUrl}}/collections/:collectionId/export-to/:dstCollectionId"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - Merge provided properties with a Collection","PATCH","{{baseUrl}}/collections/:collectionId?elevate={{elevated}}&projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - Set all properties of a Collection","PUT","{{baseUrl}}/collections/:collectionId?elevate={{elevated}}&projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - {collection Id} - Delete a Collection","DELETE","{{baseUrl}}/collections/:collectionId?elevate={{elevated}}&projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs"
"POSTS, Puts, Patches, and Deletes - Collection PPPD - Create a Collection","POST","{{baseUrl}}/collections?elevate={{elevated}}&projection=grants&projection=labels"
"POSTS, Puts, Patches, and Deletes - Asset PPPD - {asset Id} - stigs - {benchmark Id} - Delete a STIG assignment to an Asset","DELETE","{{baseUrl}}/assets/:assetId/stigs/:benchmarkId"
"POSTS, Puts, Patches, and Deletes - Asset PPPD - {asset Id} - stigs - {benchmark Id} - PUT a STIG assignment to an Asset Copy 3","PUT","{{baseUrl}}/assets/:assetId/stigs/:benchmarkId"
"POSTS, Puts, Patches, and Deletes - Asset PPPD - {asset Id} - stigs - Delete all STIG assignments to an Asset","DELETE","{{baseUrl}}/assets/:assetId/stigs"
"POSTS, Puts, Patches, and Deletes - Asset PPPD - {asset Id} - metadata - Set all properties of an Asset- with metadata","PUT","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"POSTS, Puts, Patches, and Deletes - Asset PPPD - {asset Id} - metadata - Set all metadata of an Asset","PUT","{{baseUrl}}/assets/:assetId/metadata"
"POSTS, Puts, Patches, and Deletes - Asset PPPD - {asset Id} - metadata - Set one metadata key/value of an Asset","PUT","{{baseUrl}}/assets/:assetId/metadata/keys/:key"
"POSTS, Puts, Patches, and Deletes - Asset PPPD - {asset Id} - metadata - Delete one metadata key/value of an Asset","DELETE","{{baseUrl}}/assets/:assetId/metadata/keys/:key"
"POSTS, Puts, Patches, and Deletes - Asset PPPD - {asset Id} - metadata - Merge metadata property/value into an Asset","PATCH","{{baseUrl}}/assets/:assetId/metadata"
"POSTS, Puts, Patches, and Deletes - Asset PPPD - {asset Id} - Merge provided properties with an Asset","PATCH","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"POSTS, Puts, Patches, and Deletes - Asset PPPD - {asset Id} - Set all properties of an Asset","PUT","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"POSTS, Puts, Patches, and Deletes - Asset PPPD - {asset Id} - Delete an Asset","DELETE","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"POSTS, Puts, Patches, and Deletes - Asset PPPD - Assets-batch-delete - Import and overwrite application data (as elevated Admin) Copy","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Asset PPPD - Assets-batch-delete - Delete Assets - expect success for valid users","PATCH","{{baseUrl}}/assets?collectionId={{testCollection}}"
"POSTS, Puts, Patches, and Deletes - Asset PPPD - Assets-batch-delete - Delete Assets - assets not in collection","PATCH","{{baseUrl}}/assets?collectionId={{testCollection}}"
"POSTS, Puts, Patches, and Deletes - Asset PPPD - Assets-batch-delete - Delete Assets - collection does not exist","PATCH","{{baseUrl}}/assets?collectionId=65465"
"POSTS, Puts, Patches, and Deletes - Asset PPPD - Create an Asset","POST","{{baseUrl}}/assets?projection=stigs"
"POSTS, Puts, Patches, and Deletes - Asset PPPD - Import and overwrite application data (as elevated Admin) Copy 2","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Reviews PPPD - reviews - {asset Id} - {rule Id} - PUT Review: stigs and rule projections","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=stigs"
"POSTS, Puts, Patches, and Deletes - Reviews PPPD - reviews - {asset Id} - {rule Id} - PUT Review: saved, pass, no detail","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId"
"POSTS, Puts, Patches, and Deletes - Reviews PPPD - reviews - {asset Id} - {rule Id} - PUT Review: submitted, pass, no detail Copy","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId"
"POSTS, Puts, Patches, and Deletes - Reviews PPPD - reviews - {asset Id} - {rule Id} - PUT Review: accepted, pass, no detail","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId"
"POSTS, Puts, Patches, and Deletes - Reviews PPPD - reviews - {asset Id} - {rule Id} - PUT Review: submit, fail, no comment","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId"
"POSTS, Puts, Patches, and Deletes - Reviews PPPD - reviews - {asset Id} - {rule Id} - Set all properties of a Review - with metadata","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=history&projection=stigs&projection=metadata"
"POSTS, Puts, Patches, and Deletes - Reviews PPPD - reviews - {asset Id} - {rule Id} - Set all metadata of a Review","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId/metadata"
"POSTS, Puts, Patches, and Deletes - Reviews PPPD - reviews - {asset Id} - {rule Id} - Set one metadata key/value of a Review","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId/metadata/keys/:key"
"POSTS, Puts, Patches, and Deletes - Reviews PPPD - reviews - {asset Id} - {rule Id} - Delete one metadata key/value of a Review","DELETE","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId/metadata/keys/:key"
"POSTS, Puts, Patches, and Deletes - Reviews PPPD - reviews - {asset Id} - {rule Id} - Import and overwrite application data (as elevated Admin) Copy 2","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Reviews PPPD - reviews - {asset Id} - {rule Id} - PATCH Review to Accepted","PATCH","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId"
"POSTS, Puts, Patches, and Deletes - Reviews PPPD - reviews - {asset Id} - {rule Id} - Merge metadata property/value into a Review","PATCH","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId/metadata"
"POSTS, Puts, Patches, and Deletes - Reviews PPPD - reviews - {asset Id} - {rule Id} - Merge provided properties with a Review","PATCH","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=history&projection=stigs&projection=metadata"
"POSTS, Puts, Patches, and Deletes - Reviews PPPD - reviews - {asset Id} - {rule Id} - Delete a Review","DELETE","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=history&projection=stigs"
"POSTS, Puts, Patches, and Deletes - Reviews PPPD - reviews - {asset Id} - Import one or more Reviews from a JSON body","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"POSTS, Puts, Patches, and Deletes - resultEngine tests - Import and overwrite application data (as elevated Admin) Copy","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - resultEngine tests - Delete a Review - freshRuleId - review may or may not exist","DELETE","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=history&projection=stigs"
"POSTS, Puts, Patches, and Deletes - resultEngine tests - Return the Review for an Asset and Rule Copy","GET","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=history&projection=stigs&projection=rule&projection=metadata"
"POSTS, Puts, Patches, and Deletes - resultEngine tests - resultEngine only - expect fail","PATCH","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId"
"POSTS, Puts, Patches, and Deletes - resultEngine tests - resultEngine only - expect success","PATCH","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId"
"POSTS, Puts, Patches, and Deletes - resultEngine tests - PUT Review: no resultEngine - check response does not include ""resultEngine"": 0","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId"
"POSTS, Puts, Patches, and Deletes - resultEngine tests - Delete a Review - freshRuleId - review may or may not exist Copy","DELETE","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=history&projection=stigs"
"POSTS, Puts, Patches, and Deletes - resultEngine tests - Import one or more Reviews from a JSON body","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"POSTS, Puts, Patches, and Deletes - users PPD - {user Id} - Merge provided properties with a User","PATCH","{{baseUrl}}/users/:userId?elevate={{elevated}}&projection=collectionGrants&projection=statistics"
"POSTS, Puts, Patches, and Deletes - users PPD - {user Id} - Set all properties of a User","PUT","{{baseUrl}}/users/:userId?elevate={{elevated}}&projection=collectionGrants&projection=statistics"
"POSTS, Puts, Patches, and Deletes - users PPD - {user Id} - Delete a User - fail due to user access record","DELETE","{{baseUrl}}/users/:userId?elevate={{elevated}}&projection=collectionGrants&projection=statistics"
"POSTS, Puts, Patches, and Deletes - users PPD - {user Id} - Delete a User - succeed, as user has never accessed th system","DELETE","{{baseUrl}}/users/:userId?elevate={{elevated}}&projection=collectionGrants&projection=statistics"
"POSTS, Puts, Patches, and Deletes - users PPD - Create a User","POST","{{baseUrl}}/users?elevate={{elevated}}&projection=collectionGrants&projection=statistics"
"POSTS, Puts, Patches, and Deletes - Asset Transfers - Merge provided properties with an Asset - Change Collection - Fail for all users","PATCH","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"POSTS, Puts, Patches, and Deletes - Asset Transfers - Merge provided properties with an Asset - Change Collection - valid for lvl3 and lvl4 only","PATCH","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"POSTS, Puts, Patches, and Deletes - Asset Transfers - Import and overwrite application data (as elevated Admin)","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Asset Transfers - Set all properties of an Asset - Change Collection - invalid for all users","PUT","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"POSTS, Puts, Patches, and Deletes - Asset Transfers - Set all properties of an Asset - Change Collection - valid for stigmanAdmin only","PUT","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - update filter - exclude all - Import BATCH application data (as elevated Admin) Copy 6","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - update filter - exclude all - POST batch review: update but with exclusionary updateFilters (request should do nothing)","POST","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - update filter - exclude all - batch check - one reset resultengine, rest = source Copy 6","GET","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - update filter - update by detail string - Import BATCH application data (as elevated Admin) Copy 7","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - update filter - update by detail string - POST batch review: update with updateFilters - detail string ""batch""","POST","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - update filter - update by detail string - batch check - one reset resultengine, rest = source Copy 7","GET","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - update filter - update pass only - Import BATCH application data (as elevated Admin) Copy 7","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - update filter - update pass only - POST batch review: update with updateFilters - pass only","POST","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - update filter - update pass only - batch check - one reset resultengine, rest = source Copy 7","GET","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - update filter - update admins reviews only - Import BATCH application data (as elevated Admin) Copy 7","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - update filter - update admins reviews only - POST batch review: update -  updateFilters - admins reviews only","POST","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - update filter - update admins reviews only - batch check - one reset resultengine, rest = source Copy 7","GET","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - update filter - update before date - Import BATCH application data (as elevated Admin) Copy 7","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - update filter - update before date - POST batch review: update - updateFilters- before date","POST","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - update filter - update before date - batch check - one reset resultengine, rest = source Copy 7","GET","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - update filter - update by status - Import BATCH application data (as elevated Admin) Copy 7","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - update filter - update by status - POST batch review: update - updateFilters- only non-saved status","POST","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - update filter - update by status - batch check - all reviews set to saved","GET","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - expect validation fail - Import BATCH application data (as elevated Admin) Copy 2","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - expect validation fail - POST batch Review: target by assets, and one rule, expect validation failure - invalid result for status","POST","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - expect validation fail - batch check - one reset resultengine, rest = source Copy 2","GET","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - expect validation fail - Import BATCH application data (as elevated Admin) Copy 3","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - expect validation fail - POST batch Review: target by stig, and one rule, expect validation failure - invalid result for status","POST","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - expect validation fail - batch check - one reset resultengine, rest = source Copy 3","GET","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - expect validation fail - Import BATCH application data (as elevated Admin) Copy 4","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - expect validation fail - POST batch Review: target by stig, and one rule, expect validation failure - fail result, no comment","POST","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - expect validation fail - batch check - one reset resultengine, rest = source Copy 4","GET","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - expect validation fail - Import BATCH application data (as elevated Admin) Copy 5","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - expect validation fail - POST batch Review: target by stig, and one rule, expect validation failure - no detail","POST","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - expect validation fail - batch check - one reset resultengine, rest = source Copy 5","GET","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - Import BATCH application data (as elevated Admin)","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - POST batch Review: target by assets, and one rule","POST","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - batch check - one reset resultengine, rest = source","GET","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - Import BATCH application data (as elevated Admin) Copy","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - POST batch review: target by stig and rule","POST","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - batch check - one reset resultengine, rest = source Copy","GET","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - Import BATCH application data (as elevated Admin) Copy 2","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - POST batch review: target assets, whole stig","POST","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - batch check - one reset resultengine, rest = source Copy 2","GET","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - Import BATCH application data (as elevated Admin) Copy 3","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - POST batch review: target stig, whole stig","POST","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - batch check - one reset resultengine, rest = source Copy 3","GET","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - Import BATCH application data (as elevated Admin) Copy 4","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - POST batch review: target stig, whole stig - ACTION: insert","POST","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - batch check - one reset resultengine, rest = source Copy 4","GET","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - Import BATCH application data (as elevated Admin) Copy 5","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - POST batch review: target stig, whole stig - ACTION: merge","POST","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Batch Review Editing - batch check - one reset resultengine, rest = source Copy 5","GET","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - LoadTestData Copy - Import a new STIG - VPN  (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - LoadTestData Copy - Import a new STIG - VPN R1V0","POST","{{baseUrl}}/stigs?clobber=true"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - LoadTestData Copy - Import a new STIG - VPN R1V0 - just check response","POST","{{baseUrl}}/stigs?clobber=true"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - LoadTestData Copy - Import a new STIG - Win 10  (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - LoadTestData Copy - Import a new STIG - RHEL 7 (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - LoadTestData Copy - Import and overwrite application data (as elevated Admin)","POST","{{baseUrl}}/op/appdata?elevate=true"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - LoadTestData - create-and-deletes-only - create and delete a new collection, and an asset in the testCollection - Create a Collection in order to delete it","POST","{{baseUrl}}/collections?elevate=true&projection=grants&projection=labels"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - LoadTestData - create-and-deletes-only - create and delete a new collection, and an asset in the testCollection - Delete a Collection","DELETE","{{baseUrl}}/collections/:collectionId?elevate=true&projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - LoadTestData - create-and-deletes-only - create and delete a new collection, and an asset in the testCollection - Create an Asset to be deleted in test collection","POST","{{baseUrl}}/assets?projection=stigs"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - LoadTestData - create-and-deletes-only - create and delete a new collection, and an asset in the testCollection - set stig-asset grants for a lvl1 user in this collection","PUT","{{baseUrl}}/collections/:collectionId/grants/:userId/access"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - LoadTestData - create-and-deletes-only - create and delete a new collection, and an asset in the testCollection - Import one or more Reviews from a JSON body","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - LoadTestData - create-and-deletes-only - create and delete a new collection, and an asset in the testCollection - Delete an Asset in test collection","DELETE","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - Pin revision for Collection - Return the STIGs mapped in the specified Collection","GET","{{baseUrl}}/collections/:collectionId/stigs"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - Pin revision for Collection - Set the Assets mapped to a STIG - default rev and assets","POST","{{baseUrl}}/collections/:collectionId/stigs/:benchmarkId"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - Pin revision for Collection - Set the Assets mapped to a STIG - default latest and assets","POST","{{baseUrl}}/collections/:collectionId/stigs/:benchmarkId"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - Pin revision for Collection - Set the Assets mapped to a STIG - assets only","POST","{{baseUrl}}/collections/:collectionId/stigs/:benchmarkId"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - Pin revision for Collection - Set the Assets mapped to a STIG - invalid rev - expect 422","POST","{{baseUrl}}/collections/:collectionId/stigs/:benchmarkId"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - Pin revision for Collection - Set the Assets mapped to a STIG - default rev only","POST","{{baseUrl}}/collections/:collectionId/stigs/:benchmarkId"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - Pin revision for Collection - Return mapped STIGs - expect v1r0 pin","GET","{{baseUrl}}/collections/:collectionId/stigs"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - Pin revision for Collection - verify metrics were recalculated relative to new pinned rev","GET","{{baseUrl}}/collections/:collectionId/metrics/detail"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - Pin revision for Collection - Set the Assets mapped to a STIG - clear assets","POST","{{baseUrl}}/collections/:collectionId/stigs/:benchmarkId"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - Pin revision for Collection - Set the Assets mapped to a STIG - after pinned delete","POST","{{baseUrl}}/collections/:collectionId/stigs/:benchmarkId"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - Pin revision for Collection - TEST that re-adding STIG does not have old pin","GET","{{baseUrl}}/collections/:collectionId/stigs"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - Pin revision for Collection - Set the Assets mapped to a STIG - default rev only Copy","POST","{{baseUrl}}/collections/:collectionId/stigs/:benchmarkId"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - Post and Get Reviews against Collection with pinned rev - Return a list of Reviews for an Asset","GET","{{baseUrl}}/collections/:collectionId/reviews/:assetId?projection=stigs"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - Post and Get Reviews against Collection with pinned rev - PUT Review: rule only in latest, not default","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=stigs"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - Post and Get Reviews against Collection with pinned rev - PUT Review: rule is only in pinned rev - expect 201","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=stigs"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - Post and Get Reviews against Collection with pinned rev - PUT Review: rule is only in pinned rev - 200 expected","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=stigs"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - batch - POST batch review: target rules defined by stig (expect pinned rules only)","POST","{{baseUrl}}/collections/:collectionId/reviews"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - batch - Return detailed metrics for the specified Collection - check previously empty asset for 80 assesments (overlap between pin and current)","GET","{{baseUrl}}/collections/:collectionId/metrics/detail"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - STIG and Revision deletes - benchmark - Deletes a STIG (*** and all revisions ***) - expect fail, stig is assigned","DELETE","{{baseUrl}}/stigs/:benchmarkId?elevate={{elevated}}"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - STIG and Revision deletes - {revision Str} - Deletes the specified revision of a STIG","DELETE","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr?elevate={{elevated}}"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - STIG and Revision deletes - {revision Str} - Deletes the specified revision of a STIG v1r0 - wo force (pinned)","DELETE","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr?elevate={{elevated}}"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - STIG and Revision deletes - {revision Str} - Deletes the specified revision of a STIG v1r0 - with force","DELETE","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr?elevate={{elevated}}&force=true"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - STIG and Revision deletes - {revision Str} - Return detailed metrics for the specified Collection - check metrics after delete","GET","{{baseUrl}}/collections/:collectionId/metrics/detail"
"POSTS, Puts, Patches, and Deletes - Revision Pinning - Return the STIGs mapped in the specified Collection Copy","GET","{{baseUrl}}/collections/:collectionId/stigs"
"STIGS - LoadTestData - load standard test data - Import a new STIG - Win 10  (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"STIGS - LoadTestData - load standard test data - Import a new STIG - RHEL 7 (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"STIGS - LoadTestData - load standard test data - Import a new STIG - VPN  (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"STIGS - LoadTestData - load standard test data - Import and overwrite application data (as elevated Admin)","POST","{{baseUrl}}/op/appdata?elevate=true"
"STIGS - LoadTestData - load standard test data - Deletes the specified revision of a STIG v1r0 - with force - could fail if not present, so no tests","DELETE","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr?elevate=true&force=true"
"STIGS - LoadTestData - create and delete a new collection, and an asset in the testCollection - Create a Collection in order to delete it","POST","{{baseUrl}}/collections?elevate=true&projection=grants&projection=labels"
"STIGS - LoadTestData - create and delete a new collection, and an asset in the testCollection - Delete a Collection","DELETE","{{baseUrl}}/collections/:collectionId?elevate=true&projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs"
"STIGS - LoadTestData - create and delete a new collection, and an asset in the testCollection - Create an Asset to be deleted in test collection","POST","{{baseUrl}}/assets?projection=stigs"
"STIGS - LoadTestData - create and delete a new collection, and an asset in the testCollection - set stig-asset grants for a lvl1 user in this collection.","PUT","{{baseUrl}}/collections/:collectionId/grants/:userId/access"
"STIGS - LoadTestData - create and delete a new collection, and an asset in the testCollection - Import one or more Reviews from a JSON body","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"STIGS - LoadTestData - create and delete a new collection, and an asset in the testCollection - Delete an Asset in test collection","DELETE","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"STIGS - stigs GET - {benchmark Id} - revisions - {revision Str} - groups - Return the list of groups for the specified revision of a STIG.","GET","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr/groups?projection=rules"
"STIGS - stigs GET - {benchmark Id} - revisions - {revision Str} - groups - Return the rules, checks and fixes for a Group from a specified revision of a STIG.","GET","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr/groups/:groupId?projection=rules"
"STIGS - stigs GET - {benchmark Id} - revisions - {revision Str} - rules - Return rule data for the specified revision of a STIG.","GET","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr/rules?projection=detail&projection=ccis&projection=check&projection=fix"
"STIGS - stigs GET - {benchmark Id} - revisions - {revision Str} - rules - Return rule data for the LATEST revision of a STIG","GET","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr/rules?projection=detail&projection=ccis&projection=check&projection=fix"
"STIGS - stigs GET - {benchmark Id} - revisions - {revision Str} - rules - Return rule data for the specified Rule in a revision of a STIG.","GET","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr/rules/:ruleId?projection=detail&projection=ccis&projection=check&projection=fix"
"STIGS - stigs GET - {benchmark Id} - revisions - {revision Str} - Return metadata for the specified revision of a STIG","GET","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr"
"STIGS - stigs GET - {benchmark Id} - revisions - {revision Str} - Return a list of CCIs from a STIG revision","GET","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr/ccis"
"STIGS - stigs GET - {benchmark Id} - revisions - Return a list of revisions for the specified STIG","GET","{{baseUrl}}/stigs/:benchmarkId/revisions"
"STIGS - stigs GET - {benchmark Id} - Return properties of the specified STIG","GET","{{baseUrl}}/stigs/:benchmarkId"
"STIGS - stigs GET - Return a list of available STIGs","GET","{{baseUrl}}/stigs"
"STIGS - stigs GET - Return a list of available STIGs NAME FILTER","GET","{{baseUrl}}/stigs?title=vpn"
"STIGS - stigs GET - Return data for the specified CCI","GET","{{baseUrl}}/stigs/ccis/:cci?projection=stigs&projection=emassAp&projection=references"
"STIGS - stigs GET - Return rule data for the specified Rule","GET","{{baseUrl}}/stigs/rules/:ruleId?projection=detail&projection=ccis&projection=check&projection=fix"
"STIGS - stigs PPPD - {benchmark Id} - revisions - {revision Str} - Deletes the specified revision of a STIG","DELETE","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr?elevate=true&force=true"
"STIGS - stigs PPPD - {benchmark Id} - revisions - {revision Str} - Deletes the specified revision of a STIG latest","DELETE","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr?elevate=true&force=true"
"STIGS - stigs PPPD - {benchmark Id} - Deletes a STIG (*** and all revisions ***)","DELETE","{{baseUrl}}/stigs/:benchmarkId?elevate=true&force=true"
"STIGS - stigs PPPD - Import a new STIG - new","POST","{{baseUrl}}/stigs?clobber=false"
"STIGS - stigs PPPD - Import a new STIG - preserve","POST","{{baseUrl}}/stigs?clobber=false"
"STIGS - stigs PPPD - Import a new STIG - clobber","POST","{{baseUrl}}/stigs?clobber=true"
"STIGS - Replacement Tests - Import and replace a STIG revision","POST","{{baseUrl}}/stigs?clobber=true"
"STIGS - Replacement Tests - Return a list of revisions for the specified STIG - check for updated revision","GET","{{baseUrl}}/stigs/:benchmarkId/revisions"
"STIGS - Replacement Tests - Return rule data for the specified revision of a STIG after update","GET","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr/rules?projection=detail&projection=ccis&projection=check&projection=fix"
"STIGS - Replacement Tests - Return rule data for the specified Rule in a revision of a STIG after update","GET","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr/rules/:ruleId?projection=detail&projection=ccis&projection=check&projection=fix"
"STIGS - Checks for other revs, content matches - Import a new STIG - clobber","POST","{{baseUrl}}/stigs?clobber=true"
"STIGS - Checks for other revs, content matches - Import another stig with check-system collision","POST","{{baseUrl}}/stigs?clobber=true"
"STIGS - Checks for other revs, content matches - Return rule data for the specified revision of a STIG - after import of ""other"" stig with checkId collision","GET","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr/rules?projection=check"
"STIGS - Checks for other revs, content matches - Return rule data for the specified revision of a STIG - expect matches to other rev - requests V2R2","GET","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr/rules?projection=check"
"STIGS - Checks for other revs, content matches - Return rule data for the specified Rule in a revision of a STIG. request specific rule, expect one content match","GET","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr/rules/:ruleId?projection=check"
"STIGS - Checks for other revs, content matches - Deletes a STIG (*** and all revisions ***) - cleanup ""other"" stig","DELETE","{{baseUrl}}/stigs/:benchmarkId?elevate=true&force=true"
"LVL1 cross-boundary tests - LoadTestData - load standard test data - Import a new STIG - Win 10  (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"LVL1 cross-boundary tests - LoadTestData - load standard test data - Import a new STIG - RHEL 7 (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"LVL1 cross-boundary tests - LoadTestData - load standard test data - Import a new STIG - VPN  (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"LVL1 cross-boundary tests - LoadTestData - load standard test data - Import and overwrite application data (as elevated Admin)","POST","{{baseUrl}}/op/appdata?elevate=true"
"LVL1 cross-boundary tests - LoadTestData - load standard test data - Deletes the specified revision of a STIG v1r0 - with force - could fail if not present, so no tests","DELETE","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr?elevate=true&force=true"
"LVL1 cross-boundary tests - LoadTestData - create and delete a new collection, and an asset in the testCollection - Create a Collection in order to delete it","POST","{{baseUrl}}/collections?elevate=true&projection=grants&projection=labels"
"LVL1 cross-boundary tests - LoadTestData - create and delete a new collection, and an asset in the testCollection - Delete a Collection","DELETE","{{baseUrl}}/collections/:collectionId?elevate=true&projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs"
"LVL1 cross-boundary tests - LoadTestData - create and delete a new collection, and an asset in the testCollection - Create an Asset to be deleted in test collection","POST","{{baseUrl}}/assets?projection=stigs"
"LVL1 cross-boundary tests - LoadTestData - create and delete a new collection, and an asset in the testCollection - set stig-asset grants for a lvl1 user in this collection.","PUT","{{baseUrl}}/collections/:collectionId/grants/:userId/access"
"LVL1 cross-boundary tests - LoadTestData - create and delete a new collection, and an asset in the testCollection - Import one or more Reviews from a JSON body","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"LVL1 cross-boundary tests - LoadTestData - create and delete a new collection, and an asset in the testCollection - Delete an Asset in test collection","DELETE","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"LVL1 cross-boundary tests - Return the requester's user information - check user","GET","{{baseUrl}}/user"
"LVL1 cross-boundary tests - Return the Review for an Asset and Rule - expect fail for lvl1","GET","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=history&projection=stigs&projection=rule&projection=metadata"
"LVL1 cross-boundary tests - Return the STIGs mapped in the specified Collection - lvl1 - stigStats check","GET","{{baseUrl}}/collections/:collectionId/stigs"
"LVL1 cross-boundary tests - Return an Asset (lvl1 user requests w/ 1 of 2 stig grants, check proper AdminStats)","GET","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs"
"LVL1 cross-boundary tests - Return an Asset (lvl1 user requests w/ ZERO of 2 stig grants, expect fail)","GET","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs"
"LVL1 cross-boundary tests - Return the Checklist for the supplied Collection and STIG-revStr - lvl1 no access, empty array","GET","{{baseUrl}}/collections/:collectionId/checklists/:benchmarkId/:revisionStr"
"LVL1 cross-boundary tests - Import one or more Reviews from a JSON body - ADMIN - lvl1 asset access","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"LVL1 cross-boundary tests - Import one or more Reviews from a JSON body - ADMIN - lvl1 no asset access","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"LVL1 cross-boundary tests - Merge provided properties with a Collection","PATCH","{{baseUrl}}/collections/:collectionId?projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs"
"LVL1 cross-boundary tests - Set all properties of a Collection - expect fail for lvl1","PUT","{{baseUrl}}/collections/:collectionId?elevate={{elevated}}&projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs"
"LVL1 cross-boundary tests - Set all properties of a Review - lvl1 should work","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=history&projection=stigs"
"LVL1 cross-boundary tests - Merge provided properties with a Review - lvl1 test - noAssetAccess - w admin request check Copy 2","PATCH","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=history&projection=stigs"
"LVL1 cross-boundary tests - Merge provided properties with a Review - lvl1 test - no STIG-Asset Access - w admin request check","PATCH","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=history&projection=stigs"
"LVL1 cross-boundary tests - Import one or more Reviews from a JSON body - no Asset Access","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"LVL1 cross-boundary tests - Import one or more Reviews from a JSON body - no Asset Access - multiple posts","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"LVL1 cross-boundary tests - Import one or more Reviews from a JSON body - no STIG-Asset Access","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"LVL1 cross-boundary tests - Import one or more Reviews from a JSON body - no STIG-Asset Access - multiple reviews","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"LVL1 cross-boundary tests - Set all properties of a Review - lvl1 test - no Asset Access","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=history&projection=stigs"
"LVL1 cross-boundary tests - Set all properties of a Review - lvl1 test - no STIG-Asset Access","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=history&projection=stigs"
"LVL1 cross-boundary tests - Delete a Review - lvl1 test - noAssetAccess","DELETE","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=history&projection=stigs"
"LVL1 cross-boundary tests - Delete a Review - lvl1 test - no STIG-Asset Access","DELETE","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=history&projection=stigs"
"Additional sundry tests - LoadTestData - load standard test data - Import a new STIG - Win 10  (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"Additional sundry tests - LoadTestData - load standard test data - Import a new STIG - RHEL 7 (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"Additional sundry tests - LoadTestData - load standard test data - Import a new STIG - VPN  (as admin)","POST","{{baseUrl}}/stigs?clobber=true"
"Additional sundry tests - LoadTestData - load standard test data - Import and overwrite application data (as elevated Admin)","POST","{{baseUrl}}/op/appdata?elevate=true"
"Additional sundry tests - LoadTestData - load standard test data - Deletes the specified revision of a STIG v1r0 - with force - could fail if not present, so no tests","DELETE","{{baseUrl}}/stigs/:benchmarkId/revisions/:revisionStr?elevate=true&force=true"
"Additional sundry tests - LoadTestData - create and delete a new collection, and an asset in the testCollection - Create a Collection in order to delete it","POST","{{baseUrl}}/collections?elevate=true&projection=grants&projection=labels"
"Additional sundry tests - LoadTestData - create and delete a new collection, and an asset in the testCollection - Delete a Collection","DELETE","{{baseUrl}}/collections/:collectionId?elevate=true&projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs"
"Additional sundry tests - LoadTestData - create and delete a new collection, and an asset in the testCollection - Create an Asset to be deleted in test collection","POST","{{baseUrl}}/assets?projection=stigs"
"Additional sundry tests - LoadTestData - create and delete a new collection, and an asset in the testCollection - set stig-asset grants for a lvl1 user in this collection.","PUT","{{baseUrl}}/collections/:collectionId/grants/:userId/access"
"Additional sundry tests - LoadTestData - create and delete a new collection, and an asset in the testCollection - Import one or more Reviews from a JSON body","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"Additional sundry tests - LoadTestData - create and delete a new collection, and an asset in the testCollection - Delete an Asset in test collection","DELETE","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"Additional sundry tests - Check that ""informational"" results are represented as NotReviewed with Finding Details data in .ckls - Set all properties of a Review - informational + result comment","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=history&projection=stigs"
"Additional sundry tests - Check that ""informational"" results are represented as NotReviewed with Finding Details data in .ckls - Return the Checklist for the supplied Asset and STIG XML (.ckl) - check that informational + detail exported as not_reviewed + finding_details","GET","{{baseUrl}}/assets/:assetId/checklists/:benchmarkId/:revisionStr?format=ckl"
"Additional sundry tests - Check that ""informational"" results are represented as NotReviewed with Finding Details data in .ckls - Set all properties of a Review - invalid result enum","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=history&projection=stigs"
"Additional sundry tests - Collection settings - Invalid fields.detail.required value","POST","{{baseUrl}}/collections"
"Additional sundry tests - Collection settings - Missing settings","POST","{{baseUrl}}/collections"
"Additional sundry tests - Verify manager grant restrictions - Merge provided properties with a Collection - make admin a manager","PATCH","{{baseUrl}}/collections/:collectionId?projection=grants&projection=owners"
"Additional sundry tests - Verify manager grant restrictions - Merge provided properties with a Collection - manager attempts to change owner grant","PATCH","{{baseUrl}}/collections/:collectionId?projection=grants&projection=owners"
"Additional sundry tests - Verify manager grant restrictions - Merge provided properties with a Collection - manager can set other manager grants","PATCH","{{baseUrl}}/collections/:collectionId?projection=grants&projection=owners"
"Additional sundry tests - Verify manager grant restrictions - Set all properties of a Collection Copy","PUT","{{baseUrl}}/collections/:collectionId?projection=grants&projection=owners"
"Additional sundry tests - Regression Tests - gh-756 - stig-assignments issue - assign a benchmark used in test Collection in scrap Collection","PUT","{{baseUrl}}/collections/:collectionId/stigs/:benchmarkId/assets?projection=restrictedUserAccess"
"Additional sundry tests - Regression Tests - gh-756 - stig-assignments issue - Verify that test collection still has expected benchmark assignments","GET","{{baseUrl}}/collections/:collectionId/stigs"
"Additional sundry tests - Regression Tests - gh-761 - statusStats - Import and overwrite application data (as elevated Admin)","POST","{{baseUrl}}/op/appdata?elevate=true"
"Additional sundry tests - Regression Tests - gh-761 - statusStats - set stig-asset grant to create conditions leading to issue gh-761","PUT","{{baseUrl}}/collections/:collectionId/grants/:userId/access"
"Additional sundry tests - Regression Tests - gh-761 - statusStats - Assets accessible to the requester (with STIG grants projection) -statusStats","GET","{{baseUrl}}/assets?collectionId={{testCollection}}&projection=statusStats&projection=stigs&projection=stigGrants"
"Additional sundry tests - Review Key Change - Import and overwrite application data (as elevated Admin) Copy","POST","{{baseUrl}}/op/appdata?elevate=true"
"Additional sundry tests - Review Key Change - Import a new STIG - with new RuleID matching old content","POST","{{baseUrl}}/stigs?clobber=true"
"Additional sundry tests - Review Key Change - Return the Review for an Asset and Rule - rule matches on stigId/checkContent","GET","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=history&projection=stigs&projection=rule&projection=metadata"
"Additional sundry tests - Review Key Change - PUT Review: stigs and rule projections Copy","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=stigs"
"Additional sundry tests - Review Key Change - Set all properties of an Asset - assign new STIG","PUT","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"Additional sundry tests - Review Key Change - PUT Review: stigs and rule projections- put review to alternate ruleId","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=stigs"
"Additional sundry tests - Review Key Change - Return the Review for an Asset and Rule - rule matches on stigId/checkContent Copy","GET","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=history&projection=stigs&projection=rule&projection=metadata"
"Additional sundry tests - Review Key Change - Deletes a STIG - cleanup","DELETE","{{baseUrl}}/stigs/:benchmarkId?elevate=true&force=true"
"Additional sundry tests - transfer metrics recalculation - Import a new STIG - VPN R1V0 Copy 2","POST","{{baseUrl}}/stigs?clobber=true"
"Additional sundry tests - transfer metrics recalculation - Set the Assets mapped to a STIG - default rev only - scrap collection for transfer test","POST","{{baseUrl}}/collections/:collectionId/stigs/:benchmarkId"
"Additional sundry tests - transfer metrics recalculation - Set all properties of an Asset - Change Collection to scrap collection - then check for recalculated metrics","PUT","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"Additional sundry tests - transfer metrics recalculation - verify metrics were recalculated relative to new pinned rev after transfer","GET","{{baseUrl}}/collections/:collectionId/metrics/detail"
"Additional sundry tests - delete handling - LoadTestData Copy - Import a new STIG - VPN  (as admin)","POST","{{baseUrl}}/stigs"
"Additional sundry tests - delete handling - LoadTestData Copy - Import a new STIG - Win 10  (as admin)","POST","{{baseUrl}}/stigs"
"Additional sundry tests - delete handling - LoadTestData Copy - Import a new STIG - RHEL 7 (as admin)","POST","{{baseUrl}}/stigs"
"Additional sundry tests - delete handling - LoadTestData Copy - Import and overwrite application data (as elevated Admin)","POST","{{baseUrl}}/op/appdata?elevate=true"
"Additional sundry tests - delete handling - Create a Collection in order to delete it","POST","{{baseUrl}}/collections?elevate=true&projection=grants&projection=labels"
"Additional sundry tests - delete handling - Create an Asset in collection to be deleted","POST","{{baseUrl}}/assets?projection=stigs"
"Additional sundry tests - delete handling - Import one or more Reviews from a JSON body Copy","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"Additional sundry tests - delete handling - Delete a Collection Copy","DELETE","{{baseUrl}}/collections/:collectionId?elevate=true&projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs"
"Additional sundry tests - delete handling - PUT Review: asset in deleted collection","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=stigs"
"Additional sundry tests - delete handling - Return the STIGs - from deleted collection","GET","{{baseUrl}}/collections/:collectionId/stigs"
"Additional sundry tests - delete handling - Import reviews for asset in deleted collection","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"Additional sundry tests - delete handling - Delete an Asset in deleted collection","DELETE","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"Additional sundry tests - delete handling - Import reviews for deleted asset","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"Additional sundry tests - delete handling - Return a deleted Collection","GET","{{baseUrl}}/collections/:collectionId?elevate={{elevated}}&projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs&projection=labels"
"Additional sundry tests - delete handling - Create an Asset in deleted collection","POST","{{baseUrl}}/assets?projection=stigs"
"Additional sundry tests - delete handling - Delete test Asset","DELETE","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"Additional sundry tests - delete handling - Return test Asset (with StigGrants projection)","GET","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"Additional sundry tests - Collection Cloning - clone data prep - Import and overwrite application data (as elevated Admin) Copy","POST","{{baseUrl}}/op/appdata?elevate=true"
"Additional sundry tests - Collection Cloning - clone data prep - Import a new STIG - VPN R1V0 Copy","POST","{{baseUrl}}/stigs?clobber=true"
"Additional sundry tests - Collection Cloning - clone data prep - Set default rev only","POST","{{baseUrl}}/collections/:collectionId/stigs/:benchmarkId"
"Additional sundry tests - Collection Cloning - clone param variations - clone test collection - everything matches source","POST","{{baseUrl}}/collections/:collectionId/clone?projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs&projection=labels"
"Additional sundry tests - Collection Cloning - clone param variations - clone test collection - no grants","POST","{{baseUrl}}/collections/:collectionId/clone?projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs&projection=labels"
"Additional sundry tests - Collection Cloning - clone param variations - clone test collection - no labels","POST","{{baseUrl}}/collections/:collectionId/clone?projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs&projection=labels"
"Additional sundry tests - Collection Cloning - clone param variations - clone test collection - no assets","POST","{{baseUrl}}/collections/:collectionId/clone?projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs&projection=labels"
"Additional sundry tests - Collection Cloning - clone param variations - clone test collection - stigMappings=none","POST","{{baseUrl}}/collections/:collectionId/clone?projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs&projection=labels"
"Additional sundry tests - Collection Cloning - clone param variations - clone test collection - stigMappings= withoutReviews","POST","{{baseUrl}}/collections/:collectionId/clone?projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs&projection=labels"
"Additional sundry tests - Collection Cloning - clone param variations - clone test collection - sourceDefaults","POST","{{baseUrl}}/collections/:collectionId/clone?projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs&projection=labels"
"Additional sundry tests - Collection Cloning - check clone reviews - clone collection for later Review check","POST","{{baseUrl}}/collections/:collectionId/clone?projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs&projection=labels"
"Additional sundry tests - Collection Cloning - check clone reviews - Check Reviews in cloned collection","GET","{{baseUrl}}/collections/{{clonedCollectionId}}/reviews"
"Additional sundry tests - Collection Cloning - clone param variations - user is either not lvl4 or not collectioncreator - clone test collection - lvl4 - not collectioncreator","POST","{{baseUrl}}/collections/:collectionId/clone?projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs&projection=labels"
"Additional sundry tests - Collection Cloning - clone param variations - user is either not lvl4 or not collectioncreator - clone test collection - collectionCreator - no collection grant","POST","{{baseUrl}}/collections/:collectionId/clone?projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs&projection=labels"
"Additional sundry tests - export-to - Import and overwrite application data (as elevated Admin) Copy","POST","{{baseUrl}}/op/appdata?elevate=true"
"Additional sundry tests - export-to - Merge provided properties with a Collection Copy","PATCH","{{baseUrl}}/collections/:collectionId?elevate={{elevated}}&projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs"
"Additional sundry tests - export-to - export results to another collection - entire asset - expect to create asset in destination","POST","{{baseUrl}}/collections/:collectionId/export-to/:dstCollectionId"
"Additional sundry tests - export-to - get asset created via export-to","GET","{{baseUrl}}/assets?collectionId={{scrapCollection}}&name=Collection_X_lvl1_asset-1"
"Additional sundry tests - export-to - Return detail metrics - asset agg - with param assetId SOURCE","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/asset?assetId={{testAsset}}"
"Additional sundry tests - export-to - Return detail metrics - asset agg - with param assetId DEST","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/asset?assetId={{exportedAsset}}"
"Additional sundry tests - export-to - PUT Review: stigs and rule projections Copy","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=stigs"
"Additional sundry tests - export-to - export results to another collection - entire asset - asset exists Copy","POST","{{baseUrl}}/collections/:collectionId/export-to/:dstCollectionId"
"Additional sundry tests - export-to - Return detail metrics - asset agg - with param assetId DEST Copy","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/asset?assetId={{exportedAsset}}"
"Additional sundry tests - export-to - Merge provided properties with a Collection Copy 2","PATCH","{{baseUrl}}/collections/:collectionId?elevate={{elevated}}&projection=assets&projection=grants&projection=owners&projection=statistics&projection=stigs"
"Additional sundry tests - export-to - PUT Review: stigs and rule projections Copy 2","PUT","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId?projection=rule&projection=stigs"
"Additional sundry tests - export-to - export results to another collection - entire asset - asset exists Copy 2","POST","{{baseUrl}}/collections/:collectionId/export-to/:dstCollectionId"
"Additional sundry tests - export-to - Return detail metrics - asset agg - with param assetId DEST Copy 2","GET","{{baseUrl}}/collections/:collectionId/metrics/detail/asset?assetId={{exportedAsset}}"
"Additional sundry tests - Duplicate RuleIds/Rule Fingerprint - Import and overwrite application data (as elevated Admin) Copy","POST","{{baseUrl}}/op/appdata?elevate=true"
"Additional sundry tests - Duplicate RuleIds/Rule Fingerprint - Import a new STIG - VPN  (as admin) Copy","POST","{{baseUrl}}/stigs?clobber=true"
"Additional sundry tests - Duplicate RuleIds/Rule Fingerprint - PUT a STIG assignment to an Asset Copy 2","PUT","{{baseUrl}}/assets/:assetId/stigs/:benchmarkId"
"Additional sundry tests - Duplicate RuleIds/Rule Fingerprint - Import one or more Reviews with matching Rule Fingerprints","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"Additional sundry tests - Duplicate RuleIds/Rule Fingerprint - Return detailed metrics for the specified Collection - with params Copy","GET","{{baseUrl}}/collections/:collectionId/metrics/detail?benchmarkId=VPN_SRG_Rule-fingerprint-match-test&assetId={{testAsset}}"
"Additional sundry tests - Duplicate RuleIds/Rule Fingerprint - Delete a STIG assignment to an Asset Copy","DELETE","{{baseUrl}}/assets/:assetId/stigs/:benchmarkId"
"Additional sundry tests - Duplicate RuleIds/Rule Fingerprint - PUT a STIG assignment to an Asset Copy 3","PUT","{{baseUrl}}/assets/:assetId/stigs/:benchmarkId"
"Additional sundry tests - Duplicate RuleIds/Rule Fingerprint - Return detailed metrics for the specified Collection - with params Copy 2","GET","{{baseUrl}}/collections/:collectionId/metrics/detail?benchmarkId=VPN_SRG_Rule-fingerprint-match-test&assetId={{testAsset}}"
"Additional sundry tests - Duplicate RuleIds/Rule Fingerprint - Import and overwrite application data (as elevated Admin) Copy 2","POST","{{baseUrl}}/op/appdata?elevate=true"
"Additional sundry tests - Duplicate RuleIds/Rule Fingerprint - PUT a STIG assignment to an Asset Copy 3","PUT","{{baseUrl}}/assets/:assetId/stigs/:benchmarkId"
"Additional sundry tests - Duplicate RuleIds/Rule Fingerprint - Import one or more Reviews with matching RuleIds","POST","{{baseUrl}}/collections/:collectionId/reviews/:assetId"
"Additional sundry tests - Duplicate RuleIds/Rule Fingerprint - Return detailed metrics for the specified Collection - with params Copy 2","GET","{{baseUrl}}/collections/:collectionId/metrics/detail?benchmarkId=VPN_SRG_Rule-fingerprint-match-test&assetId={{testAsset}}"
"Additional sundry tests - review status reset check - Import and overwrite application data (as elevated Admin) Copy 2","POST","{{baseUrl}}/op/appdata?elevate=true"
"Additional sundry tests - review status reset check - PATCH Review with new details, expect status to remain","PATCH","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId"
"Additional sundry tests - review status reset check - PATCH Review with new result, expect status to reset to saved","PATCH","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId"
"Additional sundry tests - review status reset check - PATCH Review to submitted status","PATCH","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId"
"Additional sundry tests - review status reset check - PATCH Review patched and no longer meets Collection Requirements","PATCH","{{baseUrl}}/collections/:collectionId/reviews/:assetId/:ruleId"
"Additional sundry tests - valid filename from Asset with reserved chars - Create an Asset in collection to be deleted Copy","POST","{{baseUrl}}/assets?projection=stigs"
"Additional sundry tests - valid filename from Asset with reserved chars - Return the ckl for Asset with reserved chars","GET","{{baseUrl}}/assets/:assetId/checklists/:benchmarkId/:revisionStr?format=ckl"
"Additional sundry tests - valid filename from Asset with reserved chars - Return the cklB for Asset with reserved chars","GET","{{baseUrl}}/assets/:assetId/checklists/:benchmarkId/:revisionStr?format=cklb"
"Additional sundry tests - valid filename from Asset with reserved chars - Return the cklB for Asset with reserved chars Copy","GET","{{baseUrl}}/assets/:assetId/checklists/:benchmarkId/:revisionStr?format=xccdf"
"Additional sundry tests - valid label checks - Import and overwrite application data (as elevated Admin) Copy","POST","{{baseUrl}}/op/appdata?elevate=true"
"Additional sundry tests - valid label checks - Merge provided properties with an Asset Copy","PATCH","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"
"Additional sundry tests - valid label checks - Replace a Labels Asset Mappings in a Collection Copy","PUT","{{baseUrl}}/collections/:collectionId/labels/:labelId/assets"
"Additional sundry tests - valid label checks - Create an Asset Copy","POST","{{baseUrl}}/assets?projection=stigs"
"Additional sundry tests - valid label checks - Set all properties of an Asset Copy","PUT","{{baseUrl}}/assets/:assetId?projection=statusStats&projection=stigs&projection=stigGrants"